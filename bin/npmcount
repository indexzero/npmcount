#!/usr/bin/env node

var cliff = require('cliff'),
    flatiron = require('flatiron'),
    app = require('../lib/npmcount');

//
// Setup to use `flatiron.plugins.cli`.
//
app.use(flatiron.plugins.cli, {
  usage: [
    'npmcount [user1, user2, user3, ...]',
    'Silly program that counts number of npm packages from one or more users',
    '',
    '-t, --truncate  Truncates the output to the specified characters',
    '-h, --help      Youre staring at it'
  ],
  argv: {
    truncate: {
      alias: 't',
      number: true,
      default: 40
    }
  }
});

app.cmd(/[\w\_\-\s\.]{1,}/ig, function () {
  //
  // Setup some global application state first.
  //
  app.log.logAll = true;
  app.config.set('truncate', app.argv.truncate);
  
  app.log.info('Searching npm');
  app.count(app.argv._, function (err) {
    if (err) {
      app.log.error('Error contacting npm');
      app.log.error(err.message);
      return;
    }

    var rows = [['name', 'description', 'maintainers', 'github followers']];
        names = Object.keys(app.packages).sort();
        
    rows = rows.concat(names.map(function (key) { return app.packages[key] }));
    
    cliff.putRows('data', rows, ['yellow', 'yellow', 'yellow', 'yellow']);
    app.log.info('Done listing all npm packages for: ' + app.argv._.join(' ').magenta);
    app.log.info('Total packages: ' + (rows.length - 1).toString().magenta);
    app.log.info('Total aggregate followers: ' + names.reduce(function (prev, curr) {
      var pkg = app.packages[curr].slice(),
          followers = pkg.pop();
      
      return typeof followers === 'number' 
        ? prev + followers
        : prev;
    }, 0).toString().magenta);
  });
});

app.start();